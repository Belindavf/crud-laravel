{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang3082{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\colortbl ;\red102\green102\blue102;\red0\green0\blue255;\red155\green0\blue211;\red0\green176\blue80;\red255\green0\blue0;}
{\*\generator Riched20 10.0.10240}\viewkind4\uc1 
\pard\sa200\sl240\slmult1\qc\cf1\b\f0\fs24\lang10\par
\fs32 Gu\'eda de LARAVEL\fs24\par

\pard\sa200\sl240\slmult1\cf0\b0\fs22\par

\pard\sa200\sl276\slmult1 - Buscar la gu\'eda de instalaci\'f3n en la p\'e1gina de Laravel\par
- Instalar composer de {{\field{\*\fldinst{HYPERLINK https://getcomposer.org/ }}{\fldrslt{https://getcomposer.org/\ul0\cf0}}}}\f0\fs22\par
- Comprobar que funciona poniendo "composer" en el shell. Comprobar en el PATH la ruta de instalaci\'f3n.\par
- Instalar el instalador de Laravel con el siguiente comando: \b composer global require laravel/installer\b0\par
- En una carpeta de proyectos laravel (ejecutar en la shell): \b laravel new crud\par
\b0 - Entramos en la carpeta \i crud \i0 y abrimos el Visual Studio Code con: \b code .\par
\b0 - Desde el XAMP abrimos el fichero httpd.conf: Apache > Config > Apache (httpd.conf)\par

\pard\sa200\sl240\slmult1 - Editamos el documento cambiando la configuraci\'f3n t\'edpica por la configuraci\'f3n de laravel:\par

\pard\sl240\slmult1\cf3\b #Configuraci\'f3n t\'edpica xamp:\par
#DocumentRoot "C:/xampp/htdocs"\par
#<Directory "C:/xampp/htdocs">\par
\par
#Configuraci\'f3n root laravel:\par
DocumentRoot "C:/Users/wadmin/Documents/laravel/crud/public"\par
<Directory "C:/Users/wadmin/Documents/laravel/crud/public">\par
\b0     #\par
    # Possible values for the Options directive are "None", "All",\par
    # ...\par
\par
\cf0\par

\pard\sa200\sl240\slmult1 - Reiniciar Apache\par
- Comprobar que funciona en el navegador con 'localhost'\par

\pard\sa200\sl276\slmult1 -  Inicializamos el repositorio Git en VSCode (\b git init\b0 )\par

\pard\sa200\sl360\slmult1 - Hago el primer commit en el icono (check).\par

\pard\sa200\sl240\slmult1 - Lo sincronizo a mi cuenta de github.com:\par

\pard\sa200\sl360\slmult1\b\tab git remote add origin {{\field{\*\fldinst{HYPERLINK https://github.com/Belindavf/crud-laravel }}{\fldrslt{https://github.com/Belindavf/crud-laravel\ul0\cf0}}}}\f0\fs22\par
\b0 - Le doy a la nube de la barra inferior azul y compruebo que el c\'f3digo se ha subido a {\i{\field{\*\fldinst{HYPERLINK https://github.com/ }}{\fldrslt{https://github.com/\ul0\cf0}}}}\b\f0\fs22\par
\b0 - Para probar como funciona MDBootstrap descargamos unas hojas de estilos, pinchando en la versi\'f3n free (\b DIRECT DOWNLOAD\b0 ) de {{\field{\*\fldinst{HYPERLINK https://mdbootstrap.com/docs/jquery/getting-started/download/ }}{\fldrslt{https://mdbootstrap.com/docs/jquery/getting-started/download/\ul0\cf0}}}}\b\f0\fs22\par
\b0 - La guardamos en la carpeta \i public\i0  con el nombre de \i estilos-MDBootstrap_4.11\i0\par
- El controlador \i router/web.php \i0 nos deriva a la p\'e1gina welcome que est\'e1 en \i resources/view/welcome.blade.php\i0\par
- Crear en \i crud/resources/views/layout \i0 los archivos \i navbar.blade.php\i0 , \i main.blade.php \i0 y \i footer.blade.php\par
\i0 - A\'f1adimos a \i main.blade.php \i0 el contenido de \i crud/public/estilos-MDBootstrap_4.11/index.html\i0\par

\pard\sa200\sl240\slmult1 - Si en el \i welcome.blade.php \i0 ponemos una sola l\'ednea \cf3 @extends('layouts.main')\cf0 , podemos ver lo que se tenga en el cuerpo del \i main.blade.php\i0 , que en este caso ser\'eda:\par

\pard\sl240\slmult1 <!-- Start your project here-->\par
\cf3 @include('layouts.navbar')\par
@yield('content')\par
@include('layouts.footer')\par
\cf0 <!-- End your project here-->\par

\pard\sa200\sl240\slmult1\par
- Completamos la p\'e1gina \i crud/resources/views/welcome.blade.php \i0 con este c\'f3digo:\par

\pard\sl240\slmult1\cf3 @extends('layouts.main')\par
@section('content')\par
<h1>P\'e1gina HOME</h1>\par
@endsection\par

\pard\sa200\sl240\slmult1\cf0\par

\pard\sa200\sl276\slmult1 - Con 'localhost' comprobamos en el navegador que se visualice el contenido html. Deber\'edamos ver el texto: \b P\'e1gina HOME\b0\par

\pard\sl360\slmult1 - Para que la p\'e1gina principal vaya cogiendo forma, copiamos en el \i navbar.blade.php\i0  el c\'f3digo \b Basic example \b0 de {{\field{\*\fldinst{HYPERLINK https://mdbootstrap.com/docs/jquery/navigation/navbar/ }}{\fldrslt{https://mdbootstrap.com/docs/jquery/navigation/navbar/\ul0\cf0}}}}\f0\fs22  y copiamos en el \i footer.blade.php\i0  el c\'f3digo \b Copyright \b0 de {{\field{\*\fldinst{HYPERLINK https://mdbootstrap.com/docs/jquery/navigation/footer/ }}{\fldrslt{https://mdbootstrap.com/docs/jquery/navigation/footer/\ul0\cf0}}}}\f0\fs22\par

\pard\sa200\sl240\slmult1\par
- Crear una base de datos en phpMyAdmin llamada "\i laravel_crud"\i0  con el usuario "\i laravel_crud_user" \i0  y la contrase\'f1a "\i abc123."\i0\par
- Modificar en el fichero \i .env \i0 el contenido referente a la base de datos, con la que creamos nosotros:\par

\pard\sl240\slmult1 (l\'ednea 12)\par
\cf3 DB_DATABASE=laravel_crud\par
DB_USERNAME=laravel_crud_user\par
DB_PASSWORD=abc123.\par

\pard\sa200\sl240\slmult1\cf0\par
- Modificamos el c\'f3digo de \i web.php \i0 a\'f1adiendo estas tres rutas:\b\par

\pard\sl240\slmult1\cf3\b0 Route::get('/', function () \{\par
    return view('welcome');\par
\});\par
Route::get('/hola', function()\{\par
    return "\'a1Hola mundo!";\par
\});\par
Route::get('/user/\{id\}', function($id)\{\par
    return "Mi c\'f3digo es: " . $id;\par
\});\cf0\b\par

\pard\sa200\sl240\slmult1\par
\b0 - Visualizaci\'f3n en el navegador. Seg\'fan la ruta de b\'fasqueda veremos diferentes resultados.\par

\pard\sl240\slmult1\i localhost/\par
localhost/hola\par
localhost/321 \par

\pard\sa200\sl240\slmult1\i0\par
- Generar un controlador con el siguiente comando en el terminal de VSCode:\par
\b\tab php artisan make:controller StudentController\par
\b0 Lo abro desde \i crud/app/Http/Controllers/StudentController.php  \i0 y creo el m\'e9todo index:\par

\pard\sl240\slmult1\cf3 class StudentController extends Controller \{\par
\tab public function index() \{\par
\tab\tab return view ('welcome');\par
\tab\}\par
\}\par

\pard\sa200\sl240\slmult1\cf0\par
- Comentamos la primera ruta del c\'f3digo \i web.php \i0 para a\'f1adir esta en su lugar:\par
\cf3 Route::get('/',  'StudentController@index') -> name('home');\cf0\b\par

\pard\sl240\slmult1\b0\par

\pard\sa200\sl240\slmult1 - Genero otro controlador\par

\pard\sl240\slmult1\b\tab php artisan make:controller TestController --resource\b0\par

\pard\sa200\sl240\slmult1\b\par
\b0 - Creamos un modelo con \par
\b\tab php artisan make:model Students -m\par
\b0 que crea un fichero \i database/migrations/2020_01_15_100904_create_students_table.php \i0 en d\'f3nde definimos los campos de la tabla Students:\b\par

\pard\sl240\slmult1\cf3\b0 public function up() \{\par
\tab Schema::create('students', function (Blueprint $table) \{\par
\tab\tab $table->bigIncrements('id');\par
\tab\tab $table->string('nombre');\par
\tab\tab $table->string('apellidos');\par
\tab\tab $table->string('email');\par
\tab\tab $table->string('telefono');\par
\tab\tab $table->timestamps();\par
\tab\});\par
\}\par

\pard\sa200\sl240\slmult1\cf0\par
- Migramos todos los esquemas con el comando \b php artisan migrate \b0 y comprobamos el resultado en MySql\par
- A\'f1adimos esta ruta en \i web.php\i0 :\par

\pard\sa200\sl360\slmult1\cf3 Route::get('/create',  'StudentController@create') -> name('create');\cf0\par

\pard\sa200\sl240\slmult1 - Creamos la funci\'f3n create() en \i StudentController.php \i0 :\par

\pard\sl240\slmult1\cf3 public function create() \{\par
\tab return view ('Hola voy a crear algo grande');\par
\}\par

\pard\sa200\sl240\slmult1\cf0\b\par
\b0 - Editar c\'f3digo de \i navbar.blade.php\i0 :\par

\pard\sl240\slmult1 <!-- Links -->\par
   \cf3  <ul class="navbar-nav mr-auto">\par
      <li class="nav-item active">\par
        <a class="nav-link" href="\{\{url('/')\}\}">Home\par
          <span class="sr-only">(current)</span>\par
        </a>\par
      </li>\par
      <li class="nav-item">\par
        <a class="nav-link" href="\{\{url('/create')\}\}">A\'f1adir</a>\par
      </li>\par
      <li class="nav-item">\par
        <a class="nav-link" href="#">Pricing</a>\par
      </li>\par

\pard\sa200\sl240\slmult1\cf0\par
- Cambiamos en \i app/Http/Controlers/StudentController.php \i0 esta l\'ednea: \par
\tab\tab\cf3 //return view ('Hola voy a crear algo grande');\par
\cf0 por esta: \tab\cf3 return view('create');\par
\par
\cf0 - Creamos una p\'e1gina: \i resources/views/create.blade.php\i0\par

\pard\sl240\slmult1 Copio el c\'f3digo de \i welcome.blade.php \i0 cambiando la l\'edneas del html(<h1>) por el c\'f3digo\par
\b Register / Sign up form\par
Default form register\b0\par
{{\field{\*\fldinst{HYPERLINK https://mdbootstrap.com/docs/jquery/forms/basic/ }}{\fldrslt{https://mdbootstrap.com/docs/jquery/forms/basic/\ul0\cf0}}}}\f0\fs22\par
\par
\par
- Lo editamos un poco cambiando los placeholder y textos a espa\'f1ol y a\'f1adimos atributos name a los campos (nombre, apellidos, email, telefono).\par

\pard\sa200\sl240\slmult1\par
- A\'f1adimos la siguiente ruta en \i web.php\i0 :\par

\pard\sl240\slmult1\cf3 //si se llama por get va a /create\cf0\par
\cf3 Route::post('/create',  'StudentController@store') -> name('store');  //si se llama por post va a /store\par

\pard\sa200\sl240\slmult1\cf0\par
- A\'f1adimos/cambiamos estos dos atributos de la etiqueta form en \i create.blade.php\i0 :\par
\cf3 action="\{\{route('store') \}\}" method="POST">\par
\cf0 y a\'f1adimos a continuaci\'f3n:\cf3\par
\{\{ csrf_field() \}\}  ---\cf0 -> \b sistema de seguridad de laravel que se utiliza para que use este formulario y env\'ede los datos generados en ese momento\b0\par
\cf3\par
\cf0 - Editamos \i StudentController.php\i0 :\i\par

\pard\sl240\slmult1\cf3\i0 use App\\Students;\par
class StudentController extends Controller\{\cf0\par
\cf3\tab public function store(Request $request) \{\par
\tab\tab $this->validate($request,[\par
\tab\tab  \tab 'nombre' => 'required',\par
\tab\tab\tab 'email' => 'required',\par
\tab\tab\tab 'telefono' => 'required'\par
\tab\tab\tab ]\par
\tab\tab );\par
\tab\tab //base de datos = names de create.blade.php\par
\tab\tab $estudiante = new Students;\par
\tab\tab $estudiante->nombre = $request->nombre;\par
\tab\tab $estudiante->apellidos = $request->apellidos;\par
\tab\tab $estudiante->email = $request->email;\par
\tab\tab $estudiante->telefono = $request->telefono;\par
\tab\tab $estudiante->save();\par
\tab\tab return redirect(route('home'))->with('successMsg', 'Estudiante a\'f1adido correctamente');\par
\tab\}\par
\}\par

\pard\sa200\sl240\slmult1\par
\cf0 - Ahora desde el navegador con {{\field{\*\fldinst{HYPERLINK http://localhost/create }}{\fldrslt{http://localhost/create\ul0\cf0}}}}\f0\fs22  si a\'f1adimos en 'sign in' un nuevo alumno deber\'eda aparecer en nuestra base de datos (\i laravel_crud\i0 ) en la tabla students el nuevo alumno creado con su nombre, apellidos, email y tel\'e9fono.\par
- A\'f1ado un alert en el  \i welcome.blade.php \i0 para saber que insertamos correctamente:\par

\pard\sl240\slmult1\cf3 @if (session('successMsg'))\par
    <div class="alert alert-success" role="alert">\par
        \{\{ session('successMsg') \}\}\par
    </div>\par
@endif\par

\pard\sa200\sl240\slmult1\cf0\par
- A\'f1ado un alert en el  \i create.blade.php\i0  para ver errores de validaci\'f3n:\par

\pard\sl240\slmult1\cf3 @if ($errors->any())\par
\tab @foreach($errors->all() as $error)\par
\tab\tab <div class="alert alert-danger" role="alert">\par
\tab\tab\tab\{\{ $error \}\}\par
\tab\tab </div>\par
\tab @endforeach\par
@endif\par

\pard\sa200\sl276\slmult1\cf0\b\par

\pard\sa200\sl240\slmult1 - \b0 Comprobamos en al navegador que funcionan los alert:\par
\tab -> mensaje de color \cf4 verde \cf0 en caso de datos introducidos correctamente\par
\tab -> mensaje de color \cf5 rojo \cf0 en caso de que exista alg\'fan error\par

\pard\sl276\slmult1\cf3\par

\pard\sa200\sl276\slmult1\cf0 - Crear en la p\'e1gina home una tabla copiada de MDBootstrap que se adapte a nuestro contenido, para la consulta de todos los registros y poder a\'f1adir botones para realizar acciones (editar, eliminar alumnos) en \i resources/views/welcome.blade.php\i0 :\par

\pard\sl276\slmult1\cf3 @endif\cf0\par
\cf3 <table class="table">\par
  <thead class="black white-text">\par
    <tr>\par
      <th scope="col">#</th>\par
      <th scope="col">Nombre</th>\par
      <th scope="col">Apellidos</th>\par
      <th scope="col">E-mail</th>\par
      <th scope="col">Tel\'e9fono</th>\par
      <th scope="col">Acciones</th>\par
    </tr>\par
  </thead>\par
  <tbody>\par
  @foreach ($estudiantes as $estudiante)\par
    <tr>\par
      <th scope="row">\{\{$estudiante->id\}\}</th>\par
      <td>\{\{$estudiante->nombre\}\}</td>\par
      <td>\{\{$estudiante->apellidos\}\}</td>\par
      <td>\{\{$estudiante->email\}\}</td>\par
      <td>\{\{$estudiante->telefono\}\}</td>\par
      <td>\par
      <a class="btn btn-raised btn-primary btn-sm" href=""> <i class="fas fa-edit"></i></a>\par
      <a class="btn btn-raised btn-danger btn-sm" href=""> <i class="fas fa-trash-alt"></i></a>\par
      </td>\par
    </tr> \par
  @endforeach\par
  </tbody>\par
</table>\par
@endsection\cf0\par

\pard\sa200\sl276\slmult1\par
- Editar el index en el controlador \i StudentController.php\i0  para pasar todos los estudiantes:\par

\pard\sl276\slmult1\cf3 public function index() \{\par
\tab //return view ('welcome');\par
\tab\b $estudiantes = Students::all();\b0\par
\tab\b return view('welcome', compact('estudiantes'));\b0\par
\}\par
\cf0\par

\pard\sa200\sl276\slmult1 - Creamos dos rutas nuevas para realizar las modificaciones (siempre en \i routes/web.php\i0 ):\par

\pard\sl276\slmult1\cf3 Route::get('/edit/\{id\}',  'StudentController@edit') -> name('edit');\par
Route::post('/update/\{id\}',  'StudentController@update') -> name('update');\par
\cf0\par

\pard\sa200\sl276\slmult1 - Creamos el controlador (en \i StudentController.php\i0 ):\par

\pard\sl276\slmult1\cf3 public function edit($id)\{\par
\tab //buscar la id en la base de datos:\par
\tab $estudiante = Students::find($id);\par
\tab //modelo vista controlador:\par
\tab return view('edit', compact('estudiante'));\par
\}\cf0\par
\par

\pard\sa200\sl276\slmult1 - Crear la p\'e1gina edit ->  \i resources/views/edit.blade.php\par
\i0 Copiamos el c\'f3digo del \i create.blade.php \i0 pero\par

\pard\sa200\sl240\slmult1\tab Cambiamos la acci\'f3n del <form>:\par
\cf3 <form class="text-center border border-light p-5" \b action="\{\{ route('update', $estudiante->id) \}\}" \b0 method="POST">\par
\cf0\tab A\'f1adimos el valor a cada input:\par

\pard\sl240\slmult1\cf3 <input name="nombre" \b value="\{\{ $estudiante->nombre \}\}" \b0 ...>\par

\pard\sl276\slmult1 <input name="apellidos" \b value="\{\{ $estudiante->apellidos \}\}" \b0 ...>\par
\tab ...\tab\b value="\{\{ $estudiante->email \}\}" \b0 >\par
\tab ...\tab\b value="\{\{ $estudiante->telefono \}\}"\b0  >\par
\par
\tab\cf0 Cambiamos el texto del bot\'f3n 'Sign in' por 'Modificar':\par
\cf3 <button class="btn btn-info my-4 btn-block" type="submit">\b Modificar\b0 </button>\par
\par
\par
\cf0 - A\'f1adir la ruta al elemento <a> del \i welcome.blade.php \par
\cf3\i0 <a class="btn btn-raised btn-primary btn-sm" \b href="\{\{route('edit',$estudiante->id)\}\}"\b0 > <i class="fas fa-edit"></i></a>\par
\par
\par
\cf0 - Copiamos la funci\'f3n \cf3\b public function store(Request $request) \cf0\b0 de \i StudentController.php \cf3\b\i0\par

\pard\sl360\slmult1\cf0\b0 y creamos una funci\'f3n update editando las siguientes l\'edneas:\par

\pard\sl276\slmult1\cf3 public function \b update(Request $request, $id) \b0\{ \tab\cf0 <-------\cf3\par
\tab $this->validate($request,[\par
\tab\tab 'nombre' => 'required',\par
\tab\tab 'email' => 'required',\par
\tab\tab 'telefono' => 'required'\par
\tab\tab ]\par
\tab );\par
\tab //base de datos = names de create.blade.php\par
\tab $estudiante = \b Students::find($id);\b0\tab\tab\cf0 <-------\cf3\par
\tab $estudiante->nombre = $request->nombre;\par
\tab $estudiante->apellidos = $request->apellidos;\par
\tab $estudiante->email = $request->email;\par
\tab $estudiante->telefono = $request->telefono;\par
\tab $estudiante->save();\par
\tab return redirect(route('home'))->with('successMsg', '\b Estudiante modificado\b0 '); \cf0 <-------\cf3\par
\}\cf0\par

\pard\sa200\sl276\slmult1\b\par

\pard\sl240\slmult1\b0 -\b  \b0 Para borrar un alumno de forma simple bastar\'eda con:\b\par
\b0\tab Crear una nueva ruta (siempre en \i web.php\i0 ):\par
\par
\cf3 //                        fichero creado en StudentController -> nombre que se la da\par

\pard\sl480\slmult1 Route::get('/delete/\{id\}', 'StudentController@delete') -> name('delete');\cf0\par

\pard\sa200\sl276\slmult1\tab A\'f1adir la ruta al bot\'f3n de eliminar, en \i welcome.blade.php\i0 :\par
\cf3 <a class="btn btn-raised btn-danger btn-sm" \b href="\{\{route('delete',$estudiante->id)\}\}" \b0 > <i class="fas fa-trash-alt"></i></a>\par

\pard\sl480\slmult1\cf0\tab Crear el controlador en \i StudentController.php\i0 :\par

\pard\sl276\slmult1\cf3 public function delete($id)\{\par
        $estudiante = Students::find($id);\par
        $estudiante->delete();\par
        return redirect (route('home'))->with('successMsg','Estudiante borrado');\par
\}\par

\pard\sa200\sl276\slmult1\cf0\par
-\b  \b0 Para un borrado m\'e1s complejo (con confirmaci\'f3n y m\'e9todo {{\field{\*\fldinst{HYPERLINK http:delete }}{\fldrslt{http:delete\ul0\cf0}}}}\f0\fs22 ), se siguen estos pasos:\par
\tab Cambiamos la ruta del \i web.php\i0\par
\cf3 Route::delete('/delete/\{id\}', 'StudentController@delete') -> name('delete');\cf0\par
\tab En \i welcome.blade.php\i0  introducimos c\'f3digo javascript para el bot\'f3n de eliminar, cambiamos la etiqueta <a>  por un formulario y un bot\'f3n:\par

\pard\sl276\slmult1\cf3 <form id="delete_form_\{\{$estudiante->id\}\}" action="\{\{route('delete',$estudiante->id)\}\}" method="post" style="display: none;" >\par
\tab\{\{csrf_field()\}\}\par
\tab\{\{method_field('delete')\}\}\par
</form>\par
<button onclick="if(confirm('\'bfEst\'e1 seguro de que desea borrar a este alumno?')) \{\par
\tab document.getElementById('delete_form_\{\{$estudiante->id\}\}').submit();\par
\tab //hay que poner \{\{$estudiante->id\}\} en el form para que borre el alumno en el que se le dio al bot\'f3n de eliminar, sino borrar\'eda el primer alumno de la tabla\par
\} else\{\par
\tab event.preventDefault(); //Este m\'e9todo cancela el evento si \'e9ste es cancelable, sin detener el resto del funcionamiento del evento, es decir, puede ser llamado de nuevo.\par
\}"\par
class="btn btn-raised btn-danger btn-sm" href="">\par
            <i class="fas fa-trash-alt"></i>\par
</button>\par

\pard\sa200\sl276\slmult1\cf0\par
- Para paginaci\'f3n introducimos en el controlador (\i StudentController.php\i0 ) el m\'e9todo \b paginate()\b0 , que nos permite ver el n\'famero de alumnos registrados en varias p\'e1ginas, en lugar de todos seguidos en la misma:\par

\pard\sl276\slmult1\cf3 public function index() \{\par
\tab //return view ('welcome');\par
\tab //$estudiantes = Students::all();\par
\tab $estudiantes = Students::paginate(5);  //<-- 5 registros por p\'e1gina\par
\tab return view('welcome', compact('estudiantes'));\par
\}\par

\pard\sa200\sl276\slmult1\cf0\par
-  Finalmente a\'f1adimos en la vista \i welcome.blade.php\i0  d\'f3nde queramos tener el control (al final del documento) que nos permite cambiar de una p\'e1gina a otra para poder ver a todos los alumnos:\par

\pard\sa200\sl240\slmult1\cf3\b\{\{$estudiantes->links()\}\}\par
\b0 @endsection\par
\cf0\b\par
}
 